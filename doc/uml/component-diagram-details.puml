@startuml

skinparam note {
  BackgroundColor LightBlue
  BorderColor #a0a0a0
  FontName Arial
  FontSize 14
  FontColor black
  RoundCorner 15
  LineType solid
}

skinparam component {
  BackgroundColor #f8f8f8
  BorderColor #a0a0a0
  BackgroundColor<<Main>> #FFFF00
  BorderColor black
  FontName Arial Unicode MS
  FontSize 20
  ArrowFontName Arial Unicode MS
  ArrowFontSize 18
}

skinparam package {
  BackgroundColor #eaeaea
  BorderColor #a0a0a0
  BackgroundColor<<Main>> gold
  BorderColor black
  ArrowColor black
  FontName Arial Unicode MS
  FontSize 20
}

skinparam class {
  BackgroundColor #f4f4f4
  BorderColor #a0a0a0
  BackgroundColor<<Main>> gold
  BorderColor black
  ArrowColor black
  FontName Arial Unicode MS
  FontSize 20
}
skinparam classFontSize 24
skinparam classAttributeIconSize 0
skinparam defaultFontSize 20

skinparam ArrowColor black
skinparam ArrowThickness 2

hide circle
hide interface fields
skinparam componentStyle uml2

component "Anwendung" <<component>> as anwendung {
    class ConcreteSubject {
        -state: State
        +getState(): State
        +setState(s: State)
    }

    class ConcreteObserver {
        +update()
    }

}

component "Fachkomponente" <<component>> as fachkomponente {
}

component " org.apache.commons:commons-lang3      " <<component>> as library {
    artifact commons-lang3-3.12.jar <<artifact>> as lang {
    }
}

component "JDK" <<component>> as Bibliothek {

    package java.util {

        class Subject {
            - changed: boolean
            - observers: Vector<Observer>
            +registerObserver(o: Observer)
            +unregisterObserver(o: Observer)
            #notifyObservers()
        }


        interface Observer {
            +update() {abstract}
        }

    }
}

anwendung ..right.> library : <<use>>
Subject <|-- ConcreteSubject
Subject o- Observer : \t\t

Observer <|.. ConcreteObserver
ConcreteSubject <- ConcreteObserver : \t\t\t

circle "   \t\t\tFassade " as fassade

anwendung ..> fassade : "<<call>>"
fassade -- fachkomponente

note as notes
  <u><b>Anmerkungen</b></u>

    Die blauen Boxen und gepunkteten
    Linien sind nur Anmerkungen. In
    eigenen Diagrammen werden sie
    nicht verwendet.
end note

note "siehe Klassendiagramm" as klassendiagramm
note "Artefakt" as artefact
note "Komponente" as component
note "Implementierung\neiner Schnittstelle" as Implementierung
note "Aufruf einer\nSchnittstelle" as Use
note "gerichtete Abh√§ngigkeit\nohne Angabe Interface" as Dependency
note "Schnittstelle" as schnittstelle

fassade .[#blue,dotted]down. Implementierung
fachkomponente .[#blue,dotted]right. Implementierung
fassade .[#blue,dotted]left. schnittstelle

anwendung .down[#blue,dotted]. Dependency
library .up[#blue,dotted]. Dependency

anwendung .[#blue,dotted]down. Use
fassade .[#blue,dotted]up. Use

lang .[#blue,dotted]down. artefact
library .[#blue,dotted]up. component
klassendiagramm .[#blue,dotted]up. Bibliothek

@enduml
